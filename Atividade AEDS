class Inteiro {

	private String valor;
	
	public Inteiro(String valor) {
		this.valor = valor;
	}

	public Inteiro() {
		valor = " ";
	}
	
	public String getValor() {
		return valor;
	}

	public void setValor(String valor) {
		this.valor = valor;
	}
	
	public void imprimir() {
		System.out.println("Valor -> " + valor);
	}
}

class Celula {

	private Inteiro item;
	private Celula proximo;
	
	public Celula(Inteiro novo) {
	
  	item = novo;
		proximo = null;
	}
	
	public Celula() {
		
		item = new Inteiro();
		proximo = null;
	}
	
	public Inteiro getItem() {
		return item;
	}
	public void setItem(Inteiro item) {
		this.item = item;
	}
	
	public Celula getProximo() {
		return proximo;
	}
	public void setProximo(Celula proximo) {
		this.proximo = proximo;
	}
}

class Fila {

	private Celula frente;
	private Celula tras;
	
	public Fila() {
		
		Celula sentinela;
		
		sentinela = new Celula();
		frente = sentinela;
		tras = sentinela;
	}
	
	public boolean filaVazia() {
		
		boolean resp;
		
		if (frente == tras)
			resp = true;
		else
			resp = false;
		
		return resp;
	}
	
	public void enfileirar(Inteiro novo) {
		
		Celula novaCelula;
		
		novaCelula = new Celula(novo);
		
		tras.setProximo(novaCelula);
		tras = novaCelula;
		// tras = tras.getProximo();
	}
	
	public Inteiro desenfileirar() throws Exception {
		
		Celula celulaDesenfileirada;
		Celula proximaCelula;
		
		if (! filaVazia()) {
		
			celulaDesenfileirada = frente.getProximo();
			proximaCelula = celulaDesenfileirada.getProximo();
			frente.setProximo(proximaCelula);
			
			if (celulaDesenfileirada == tras) // se a célula retirada for a última célula da fila
				tras = frente;
			
			return (celulaDesenfileirada.getItem());
		} else
			throw new Exception("Não foi possível desenfileirar nenhum item: a fila está vazia!");
	}
	
	public void imprimir() throws Exception {
		
		Celula aux;
		int i;
		i = 0;
		
		if (! filaVazia()) {
			System.out.println("Conteúdo da fila:");
			aux = frente.getProximo();
			while (aux != null) {
				i = i + 1;
				System.out.print("Posição " + i + ": ");
				aux.getItem().imprimir();
				aux = aux.getProximo();
			}
		} else
			throw new Exception ("Não foi possível imprimir o conteúdo da fila: a fila está vazia!");
	}
}

class Main {
  public static void main(String[] args) {
    Fila minhaFila;
		Inteiro novo;
		Inteiro desenfileirado;
		
		minhaFila = new Fila();
		
		novo = new Inteiro("Aga");
		minhaFila.enfileirar(novo);
		
		novo = new Inteiro("Jota");
		minhaFila.enfileirar(novo);
		
		novo = new Inteiro("Baba");
		minhaFila.enfileirar(novo);
		
		try {
			minhaFila.imprimir();    
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
		
		try {
			desenfileirado = minhaFila.desenfileirar();
			System.out.print("Desenfileirado: ");
			desenfileirado.imprimir();    
		} catch (Exception e) {
			System.out.println(e.getMessage());	
		}
		
		try {
			desenfileirado = minhaFila.desenfileirar();
			System.out.print("Desenfileirado: ");
			desenfileirado.imprimir();    
		} catch (Exception e) {
			System.out.println(e.getMessage());	
		}
		
		try {
			desenfileirado = minhaFila.desenfileirar();
			System.out.print("Desenfileirado: ");
			desenfileirado.imprimir();    
		} catch (Exception e) {
			System.out.println(e.getMessage());	
		}
		
		novo = new Inteiro("Jaja");
		minhaFila.enfileirar(novo);
		
		novo = new Inteiro("HAHA");
		minhaFila.enfileirar(novo);
		
		novo = new Inteiro("KKKK");
		minhaFila.enfileirar(novo);
		
		try {
			minhaFila.imprimir();    
		} catch (Exception e) {
			System.out.println(e.getMessage());
		}
  }
}
